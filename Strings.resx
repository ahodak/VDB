<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>d.</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteRequest" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="Director" xml:space="preserve">
    <value>Director</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ErrorNameIsEmpty" xml:space="preserve">
    <value>Disk name can not be empty</value>
  </data>
  <data name="ErrorTypeIsEmpty" xml:space="preserve">
    <value>Disk type can not be empty</value>
  </data>
  <data name="FormAddTitle" xml:space="preserve">
    <value>Add disk</value>
  </data>
  <data name="FormDeleteTitle" xml:space="preserve">
    <value>Delete disk</value>
  </data>
  <data name="FormEditTitle" xml:space="preserve">
    <value>Edit disk</value>
  </data>
  <data name="FormFindTitle" xml:space="preserve">
    <value>Find disk</value>
  </data>
  <data name="Genre" xml:space="preserve">
    <value>Genre</value>
  </data>
  <data name="Given" xml:space="preserve">
    <value>Given</value>
  </data>
  <data name="Houres" xml:space="preserve">
    <value>h.</value>
  </data>
  <data name="IsCompaniesModified" xml:space="preserve">
    <value>Enter company name</value>
  </data>
  <data name="IsDebtorsModified" xml:space="preserve">
    <value>Enter debtor name</value>
  </data>
  <data name="IsDirectorsModified" xml:space="preserve">
    <value>Enter director name</value>
  </data>
  <data name="IsGenresModified" xml:space="preserve">
    <value>Enter genre name</value>
  </data>
  <data name="IsStarsModified" xml:space="preserve">
    <value>Enter actor name</value>
  </data>
  <data name="IsTypesModified" xml:space="preserve">
    <value>Enter disk type</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="miAboutToolTip" xml:space="preserve">
    <value>Display information about program author and version</value>
  </data>
  <data name="miAddToolTip" xml:space="preserve">
    <value>Add a new disk in the collection</value>
  </data>
  <data name="miDebtorsToolTip" xml:space="preserve">
    <value>Display a list of debtors and discs that they are given</value>
  </data>
  <data name="miDeleteToolTip" xml:space="preserve">
    <value>Remove the disc from the collection</value>
  </data>
  <data name="miDictionariesToolTip" xml:space="preserve">
    <value>Fill the dictionaries</value>
  </data>
  <data name="miEditToolTip" xml:space="preserve">
    <value>Edit disc information</value>
  </data>
  <data name="miExitToolTip" xml:space="preserve">
    <value>Close application</value>
  </data>
  <data name="miFindNextToolTip" xml:space="preserve">
    <value>Find next disk</value>
  </data>
  <data name="miFindToolTip" xml:space="preserve">
    <value>Find disks in collection</value>
  </data>
  <data name="miGiveToolTip" xml:space="preserve">
    <value>Set mark that the disc is given</value>
  </data>
  <data name="miNewToolTip" xml:space="preserve">
    <value>Create new disks collection</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>min</value>
  </data>
  <data name="miOpenToolTip" xml:space="preserve">
    <value>Open file containing disks data</value>
  </data>
  <data name="miOptionsToolTip" xml:space="preserve">
    <value>Customize program options</value>
  </data>
  <data name="miPageSetupToolTip" xml:space="preserve">
    <value>Setting page parameters</value>
  </data>
  <data name="miPreviewToolTip" xml:space="preserve">
    <value>Preview disks list befor printing</value>
  </data>
  <data name="miPrintToolTip" xml:space="preserve">
    <value>Print disks list</value>
  </data>
  <data name="miReturnToolTip" xml:space="preserve">
    <value>Deselect that the disk was given</value>
  </data>
  <data name="miSaveAsToolTip" xml:space="preserve">
    <value>Save changes in other place</value>
  </data>
  <data name="miSaveToolTip" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="miSortCompanyToolTip" xml:space="preserve">
    <value>Sort disks by company name</value>
  </data>
  <data name="miSortDateToolTip" xml:space="preserve">
    <value>Sort disks by date</value>
  </data>
  <data name="miSortDirectorToolTip" xml:space="preserve">
    <value>Sort disks by directors name</value>
  </data>
  <data name="miSortGenreToolTip" xml:space="preserve">
    <value>Sort disks by genre</value>
  </data>
  <data name="miSortLengthToolTip" xml:space="preserve">
    <value>Sort disks by length</value>
  </data>
  <data name="miSortNameEngToolTip" xml:space="preserve">
    <value>Sort disks by original name</value>
  </data>
  <data name="miSortNameRusToolTip" xml:space="preserve">
    <value>Sort disks by name</value>
  </data>
  <data name="miSortRankToolTip" xml:space="preserve">
    <value>Sort disks by rating</value>
  </data>
  <data name="miSortSizeToolTip" xml:space="preserve">
    <value>Sort disks by file size</value>
  </data>
  <data name="miSortStarsToolTip" xml:space="preserve">
    <value>Sort disks by actors name</value>
  </data>
  <data name="miSortTypeToolTip" xml:space="preserve">
    <value>Sort disks by type</value>
  </data>
  <data name="miSortYearToolTip" xml:space="preserve">
    <value>Sort disks by year</value>
  </data>
  <data name="miStatToolTip" xml:space="preserve">
    <value>Display collections statistic information</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoGiven" xml:space="preserve">
    <value>All discs are the owner</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Disks not found</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="ReturnRequest" xml:space="preserve">
    <value>Are you sure that the disk is returned?</value>
  </data>
  <data name="Rights" xml:space="preserve">
    <value>All rights reserved.</value>
  </data>
  <data name="SaveRequest" xml:space="preserve">
    <value>Save changes?</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>sec</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="Find" xml:space="preserve">
    <value>Search...</value>
  </data>
</root>